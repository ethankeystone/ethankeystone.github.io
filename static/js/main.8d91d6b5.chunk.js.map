{"version":3,"sources":["images/codinglogo.svg","images/logo.svg","NavBar.js","pages/Explore.js","pages/AboutUs.js","pages/MoreStuff.js","pages/EvenMoreStuff.js","PathFindingVisualizer/Node.js","PathFindingVisualizer/PathFindingVisualizer.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","className","src","logo","id","alt","to","style","textDecoration","Explore","AboutUs","MoreStuff","EvenMoreStuff","Node","props","changeColor","bind","state","isLoading","color","this","newColor","setState","col","row","onMouseDown","Component","PathFindingVisualizer","grid","i","currentRow","j","push","map","key","node","Home","App","exact","path","process","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8d91d6b5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/codinglogo.5c22fb1a.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\nimport logo from \"./images/codinglogo.svg\";\r\nimport logo_two from \"./images/logo.svg\";\r\nimport {Link} from \"react-router-dom\";\r\nimport \"./css/NavBar.css\";\r\n\r\nfunction NavBar() {\r\n    return ( \r\n        <header>\r\n            <div className = \"container\">\r\n            <img src={logo} className=\"App-logo\" id=\"App-logo\" alt=\"logo\" />\r\n            <h1>\r\n                <Link to=\"/\" style={{ textDecoration: 'none'}} className = \"button\">\r\n                  Coding Imagined\r\n                </Link>\r\n            </h1>\r\n            <nav className=\"App-Header\">\r\n                <ul className=\"buttons\">\r\n                    <li>\r\n                        <Link to=\"/explore\" style={{ textDecoration: 'none'}} className = \"button\">\r\n                            Explore\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/about\" style={{ textDecoration: 'none'}} className = \"button\">\r\n                        About Us\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/morestuff\" style={{ textDecoration: 'none'}} className = \"button\">\r\n                        More Stuff\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/evenMoreStuff\" style={{ textDecoration: 'none'}} className = \"button\">\r\n                        Even More Stuff\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default NavBar;","import React from \"react\";\r\nimport NavBar from \"../NavBar\";\r\n\r\nfunction Explore() {\r\n    return ( \r\n        <div>\r\n        <NavBar></NavBar>\r\n        <div>\r\n            Explore Page\r\n        </div>\r\n    </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Explore;","import React from \"react\";\r\nimport NavBar from \"../NavBar\";\r\n\r\nfunction AboutUs() {\r\n    return ( \r\n        <div>\r\n            <NavBar></NavBar>\r\n            <div>\r\n               About Us\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default AboutUs;","import React from \"react\";\r\nimport NavBar from \"../NavBar\";\r\n\r\nfunction MoreStuff() {\r\n    return ( \r\n        <div>\r\n        <NavBar></NavBar>\r\n        <div>\r\n            More Stuff\r\n        </div>\r\n    </div>\r\n\r\n    );\r\n}\r\n\r\nexport default MoreStuff;","import React from \"react\";\r\nimport NavBar from \"../NavBar\";\r\n\r\nfunction EvenMoreStuff() {\r\n    return ( \r\n        <div>\r\n        <NavBar></NavBar>\r\n        <div>\r\n            Even More Stuff\r\n        </div>\r\n    </div>\r\n\r\n    );\r\n}\r\n\r\nexport default EvenMoreStuff;","import React, { Component } from 'react';\r\nimport \"./Node.css\"\r\n\r\nexport default class Node extends Component {\r\n\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.changeColor.bind(this)\r\n    this.state = {\r\n      isLoading: false,\r\n      color: \"none\"\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.state = {\r\n      isLoading: false,\r\n      color: \"none\"\r\n    };\r\n  }\r\n  changeColor() {\r\n    var newColor = (this.state.color == \"none\") ? \"green\": \"none\";\r\n    this.setState({\r\n      isLoading: false,\r\n      color: newColor\r\n    });\r\n  }\r\n  render() {\r\n    const {\r\n      col,\r\n      row\r\n    } = this.props;\r\n    const color = (col + row) % 2 == 0 ? \"red\" : \"green\";\r\n    if(this.state.isLoading == true) {\r\n      return (\r\n        <div className={\"node \"}>\r\n          y\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className={\"node \" + this.state.color} onMouseDown={() => {this.changeColor()}}>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n   \r\n\r\n","import React, { Component } from \"react\";\r\nimport Node from \"./Node\";\r\nimport \"./PathFindingVisualizer.css\";\r\n\r\nexport default class PathFindingVisualizer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: true,\r\n      grid: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let width = 10;\r\n    let height = 10;\r\n    var grid = [];\r\n    var id = 0;\r\n    for (let i = 0; i < width; i++) {\r\n      const currentRow = [];\r\n      for (let j = 0; j < height; j++) {\r\n        currentRow.push({\r\n          col: i,\r\n          row: j,\r\n          id: id,\r\n        });\r\n        id++;\r\n      }\r\n      grid.push(currentRow);\r\n    }\r\n    this.setState({\r\n      isLoading: false,\r\n      grid: grid\r\n    });\r\n  }\r\n  render() {\r\n    if (this.state.isLoading) {\r\n      return <div></div>;\r\n    } else {\r\n      let grid = this.state.grid;\r\n      return (\r\n        <div className=\"center\">\r\n          {grid.map(row => {\r\n            return (\r\n              <div key={row[0].col} className=\"row\">\r\n                {row.map(node => {\r\n                  return <Node col={node.col} row={node.row} key={node.id}></Node>;\r\n                })}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport NavBar from \"../NavBar\";\r\nimport PathFindingVisualizer from \"../PathFindingVisualizer/PathFindingVisualizer.js\";\r\nfunction Home() {\r\n  return (\r\n    <div className=\"App\">\r\n        <NavBar></NavBar>\r\n        <PathFindingVisualizer></PathFindingVisualizer>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport \"./css/App.css\";\r\nimport { Route, Link, BrowserRouter as Router, Switch } from \"react-router-dom\";\r\nimport Explore from \"./pages/Explore\"\r\nimport AboutUs from \"./pages/AboutUs\"\r\nimport MoreStuff from \"./pages/MoreStuff\"\r\nimport EvenMoreStuff from \"./pages/EvenMoreStuff\"\r\nimport Home from \"./pages/Home\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path={process.env.PUBLIC_URL + '/'} component={Home}/>\r\n          <Route path={process.env.PUBLIC_URL + '/about'} component={AboutUs}/>\r\n          <Route path=\"/explore\" component={Explore}/>\r\n          <Route path=\"/moreStuff\" component={MoreStuff}/>\r\n          <Route path=\"/EvenMoreStuff\" component={EvenMoreStuff}/>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}