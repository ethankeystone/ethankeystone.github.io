{"version":3,"sources":["images/codinglogo.svg","NavBar.js","pages/Explore.js","pages/AboutUs.js","pages/MoreStuff.js","pages/EvenMoreStuff.js","PathFindingVisualizer/Node.js","PathFindingVisualizer/PathFindingVisualizer.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","className","src","logo","id","alt","to","style","textDecoration","Explore","AboutUs","MoreStuff","EvenMoreStuff","Node","props","state","isLoading","color","this","setState","col","row","nodeState","addNode","handleMouseUp","handleMouseDown","determineColor","onMouseDown","onMouseEnter","onMouseUp","Component","PathFindingVisualizer","grid","mouseDown","currentSelection","startNode","endNode","i","currentRow","j","push","resetGrid","update","$set","createGrid","onClick","htmlFor","onChange","option","target","value","map","key","node","Home","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eaef4052.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/codinglogo.5c22fb1a.svg\";","import React from \"react\";\r\nimport logo from \"./images/codinglogo.svg\";\r\nimport {Link} from \"react-router-dom\";\r\nimport \"./css/NavBar.css\";\r\n\r\nfunction NavBar() {\r\n    return ( \r\n        <header>\r\n            <div className = \"container\">\r\n            <img src={logo} className=\"App-logo\" id=\"App-logo\" alt=\"logo\" />\r\n            <h1>\r\n                <Link to=\"/\" style={{ textDecoration: 'none'}} className = \"button\">\r\n                  Coding Imagined\r\n                </Link>\r\n            </h1>\r\n            <nav className=\"App-Header\">\r\n                <ul className=\"buttons\">\r\n                    <li>\r\n                        <Link to=\"/explore\" style={{ textDecoration: 'none'}} className = \"button\">\r\n                            Explore\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/about\" style={{ textDecoration: 'none'}} className = \"button\">\r\n                        About Us\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/morestuff\" style={{ textDecoration: 'none'}} className = \"button\">\r\n                        More Stuff\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/evenMoreStuff\" style={{ textDecoration: 'none'}} className = \"button\">\r\n                        Even More Stuff\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default NavBar;","import React from \"react\";\r\nimport NavBar from \"../NavBar\";\r\n\r\nfunction Explore() {\r\n    return ( \r\n        <div>\r\n        <NavBar></NavBar>\r\n        <div>\r\n            Explore Page\r\n        </div>\r\n    </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Explore;","import React from \"react\";\r\nimport NavBar from \"../NavBar\";\r\n\r\nfunction AboutUs() {\r\n    return ( \r\n        <div>\r\n            <NavBar></NavBar>\r\n            <div>\r\n               About Us\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default AboutUs;","import React from \"react\";\r\nimport NavBar from \"../NavBar\";\r\n\r\nfunction MoreStuff() {\r\n    return ( \r\n        <div>\r\n        <NavBar></NavBar>\r\n        <div>\r\n            More Stuff\r\n        </div>\r\n    </div>\r\n\r\n    );\r\n}\r\n\r\nexport default MoreStuff;","import React from \"react\";\r\nimport NavBar from \"../NavBar\";\r\n\r\nfunction EvenMoreStuff() {\r\n    return ( \r\n        <div>\r\n        <NavBar></NavBar>\r\n        <div>\r\n            Even More Stuff\r\n        </div>\r\n    </div>\r\n\r\n    );\r\n}\r\n\r\nexport default EvenMoreStuff;","import React, { Component } from 'react';\r\nimport \"./Node.css\"\r\n\r\nexport default class Node extends Component {\r\n\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      color: \"none\"\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      isLoading: false,\r\n      color: \"none\",\r\n      col: this.props.col,\r\n      row: this.props.row\r\n    });\r\n  }\r\n\r\n  determineColor(nodeState) {\r\n    if(nodeState === \"none\") {\r\n      return(\"none\");\r\n    } else if (nodeState === \"expand\") {\r\n      return (\"green\");\r\n    } else if (nodeState === \"path\") {\r\n      return (\"blue\");\r\n    } else if(nodeState === \"start\") {\r\n      return (\"start\");\r\n    } else if(nodeState === \"end\") {\r\n      return(\"end\");\r\n    } else if (nodeState === \"wall\") {\r\n      return(\"wall\");\r\n    } else {\r\n      return(\"error\");\r\n    }\r\n  }\r\n  render() {\r\n    const {\r\n      col,\r\n      row,\r\n      addNode,\r\n      state,\r\n      handleMouseUp,\r\n      handleMouseDown\r\n    } = this.props;\r\n    var color = this.determineColor(state)\r\n    this.state.color = color;\r\n    if(this.state.isLoading === true) {\r\n      return (\r\n        <div className={\"node \"}>\r\n          Yikes\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className={\"node \" + this.state.color}\r\n           onMouseDown={() => {\r\n             handleMouseDown()\r\n          }}\r\n            onMouseEnter={() => addNode(col, row)}\r\n            onMouseUp={() => handleMouseUp(col, row)}\r\n          >\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n   \r\n\r\n","import React, { Component} from \"react\";\r\nimport Node from \"./Node\";\r\nimport update from 'immutability-helper';\r\nimport \"./PathFindingVisualizer.css\";\r\n\r\n\r\nexport default class PathFindingVisualizer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: true,\r\n      grid: null,\r\n      mouseDown: false,\r\n      currentSelection: \"1\"\r\n    };\r\n  }\r\n\r\n  createGrid() {\r\n    let width = 15;\r\n    let height = 40;\r\n    var grid = [];\r\n    var id = 0;\r\n\r\n    let startNode = {col: 7, row: 5};\r\n    let endNode = {col: 7, row: 30};\r\n\r\n    for (let i = 0; i < width; i++) {\r\n      const currentRow = [];\r\n      for (let j = 0; j < height; j++) {\r\n        let nodeState = \"none\"\r\n        if(i === startNode.col && j === startNode.row) {\r\n          nodeState = \"start\";\r\n        } else if (i === endNode.col && j === endNode.row) {\r\n          nodeState = \"end\";\r\n        } \r\n        currentRow.push({\r\n          col: i,\r\n          row: j,\r\n          id: id,\r\n          state: nodeState\r\n        });\r\n        id++;\r\n      }\r\n      grid.push(currentRow);\r\n    }\r\n    return (grid);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.resetGrid()\r\n  }\r\n\r\n  addNode(row, col) {\r\n    if(this.state.mouseDown) {\r\n      if(this.state.grid[col][row].state === \"expand\" || this.state.grid[col][row].state === \"weight\") {\r\n        this.setState({grid: update(this.state.grid, {[col]: {[row]: {state: {$set: \"none\"}}}})}); \r\n      } else if(this.state.grid[col][row].state === \"end\") {\r\n\r\n      } else if(this.state.grid[col][row].state === \"start\") {\r\n\r\n      } else {\r\n        if(this.state.currentSelection === \"1\") {\r\n          this.setState({grid: update(this.state.grid, {[col]: {[row]: {state: {$set: \"expand\"}}}})}); \r\n        } else if(this.state.currentSelection === \"2\") {\r\n          this.setState({grid: update(this.state.grid, {[col]: {[row]: {state: {$set: \"wall\"}}}})}); \r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  handleMouseDown(row, col) {\r\n    if(this.state.grid[col][row].state === \"expand\" || this.state.grid[col][row].state === \"weight\") {\r\n      this.setState({grid: update(this.state.grid, {[col]: {[row]: {state: {$set: \"none\"}}}})}); \r\n    } else if(this.state.grid[col][row].state === \"end\") {\r\n\r\n    } else if(this.state.grid[col][row].state === \"start\") {\r\n\r\n    } else {\r\n      if(this.state.currentSelection === \"1\") {\r\n        this.setState({grid: update(this.state.grid, {[col]: {[row]: {state: {$set: \"expand\"}}}})}); \r\n      } else if (this.state.currentSelection === \"2\") {\r\n        this.setState({grid: update(this.state.grid, {[col]: {[row]: {state: {$set: \"wall\"}}}})}); \r\n      }\r\n    }\r\n    this.setState({mouseDown: true});\r\n  }\r\n\r\n  handleMouseUp() {\r\n    this.setState({mouseDown: false});\r\n  }\r\n\r\n  resetGrid() {\r\n    this.setState({\r\n      isLoading: false,\r\n      grid: this.createGrid()\r\n    });\r\n  }\r\n  \r\n\r\n\r\n  render() {\r\n    if (this.state.isLoading) {\r\n      return <div></div>;\r\n    } else {\r\n      let grid = this.state.grid;\r\n      return (\r\n        <div className=\"center\">\r\n          <button onClick={() => this.resetGrid()}> Reset Grid </button>\r\n          <label htmlFor=\"Weight\">Toggle Weights </label>\r\n          <select id = \"Weight\" onChange={(option)=>this.setState({currentSelection: option.target.value})}>\r\n               <option value = \"1\">Wall</option>\r\n               <option value = \"2\">Weights</option>\r\n          </select>\r\n          <label id=\"Algo\"> Select Algorithm </label>\r\n          <select id=\"Algo\">\r\n            <option value = \"1\"> Dijkstra's </option>\r\n            <option value = \"2\"> Some other one </option>\r\n          </select>\r\n          <div>\r\n          {grid.map(row => {\r\n            return (\r\n              <div key={row[0].col} className=\"row\">\r\n                {row.map(node => {\r\n                  return <Node\r\n                    col={node.col} \r\n                    row={node.row} \r\n                    key={node.id}\r\n                    addNode={(row, col) => this.addNode(node.row, node.col)}\r\n                    handleMouseDown={(row, col) => this.handleMouseDown(node.row, node.col)}\r\n                    handleMouseUp={() => this.handleMouseUp()}\r\n                    state={node.state}  \r\n                    ></Node>;\r\n                })}\r\n              </div>\r\n            );\r\n          })}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport NavBar from \"../NavBar\";\r\nimport PathFindingVisualizer from \"../PathFindingVisualizer/PathFindingVisualizer.js\";\r\nfunction Home() {\r\n  return (\r\n    <div className=\"App\">\r\n        <NavBar></NavBar>\r\n        <PathFindingVisualizer></PathFindingVisualizer>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport \"./css/App.css\";\r\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\r\nimport Explore from \"./pages/Explore\"\r\nimport AboutUs from \"./pages/AboutUs\"\r\nimport MoreStuff from \"./pages/MoreStuff\"\r\nimport EvenMoreStuff from \"./pages/EvenMoreStuff\"\r\nimport Home from \"./pages/Home\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path={process.env.PUBLIC_URL + '/'} component={Home}/>\r\n          <Route path={process.env.PUBLIC_URL + '/about'} component={AboutUs}/>\r\n          <Route path=\"/explore\" component={Explore}/>\r\n          <Route path=\"/moreStuff\" component={MoreStuff}/>\r\n          <Route path=\"/EvenMoreStuff\" component={EvenMoreStuff}/>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}